import json
import csv
import pandas as pd  # Убедитесь, что у вас установлена библиотека pandas

def out_red(text):
    print("\033[31m{}".format(text))

def out_dark(text):
    print("\033[0m{}".format(text))

def out_green(text):
    print("\033[32m{}".format(text))

def save_game_to_json(data, filename):
    with open(filename, 'w') as file:
        json.dump(data, file)

def load_game_from_json(filename):
    try:
        with open(filename, 'r') as file:
            data = json.load(file)
        return data
    except FileNotFoundError:
        print("Сохранение не найдено.")
        return {}

def delete_save_json(filename):
    try:
        import os
        os.remove(filename)
        print("Сохранение удалено.")
    except FileNotFoundError:
        print("Сохранение не найдено.")

def write_to_csv(data, filename):
    try:
        df = pd.DataFrame(list(data.items()), columns=["Username", "Score"])
        df.to_csv(filename, index=False)
        print("Данные записаны в CSV файл.")
    except Exception as e:
        print(f"Ошибка при записи в CSV файл: {e}")

def introduction():
    print("Добро пожаловать в мир приключений и загадок!")

def get_character_name():
    print("Вы можете выбрать имя героя из этого списка или придумайте свое: ")
    names = ['Ахмед', 'Рамиль', 'Никита', 'Вика', 'Маша', 'Лиза']
    set(names)
    list(set(names))
    unique_names = set(names)
    for name in unique_names:
        print(name)
    character_name = input("Введите имя своего героя: ")
    return character_name

def dark_forest():
    out_dark("Вы попали в темный лес. \n"
             "Гуляя, вы видите странные картины,\n"
             "пройдя несколько километров, вы находите избу.\n"
             "Вы подходите все ближе и ближе и ужасаетесь от избушки.\n"
             "Подойдя почти в упор оттуда выходит Баба Яга,\n"
             "Вы побледнели и спрятались в кустах.\n"
             "Баба Яга учуяла вас, но не смогла найти вас.\n"
             "Сидя в кустах, вы захотели поесть, но кроме избы Бабы Яги, будто в этом темном лесу ничего нет.\n"
             "Вы решаетесь зайти в избушку Бабы Яги через окно.\n"
             "Зайдя, вы видите не мрак и ужас в избушке, а уютное, прекрасное место.\n"
             "Посмотрев всю избушку, вы встречаете Бабу Ягу и испугались ее, но вам уже некуда было бежать,\n"
             "но вдруг Баба Яга улыбнулась и начала вести с вами диалог.\n"
             "Общаясь с ней, вы узнали ее ближе, она оказывается добрая и не ест детей.\n"
             "Болтая с ней, время пролетело быстро и после всего с Бабой Ягой, она помогла вернуться домой.\n ")


def city_of_magic():
    out_dark("Вы попали в магический город\n"
             "Гуляя по городу, вы разглядывали это чудесное место и восхищались им.  \n"
             "Увидев людей, вы помчались к ним, \n"
             "люди были добры к вам и приютили вас. \n"
             "Подходя к дому, вы заметили странный дом перед своим жильем,\n"
             "который был похож на старый, заброшенный дом\n"
             "Живя уже долгое время в своем доме, вам стало интересно, кто там живет\n"
             "по рассказам людей, которые приняли вас,\n"
             "Деда звали: Неберкрякер,\n"
             "ему уже 70 лет и он давно живет один.\n"
             "Никто не знает его прошлое, знают только, что если наступить на его траву, то вы получите люлей.\n"
             "Вы следили за дедом и видели, как день за днем, дети случайно попадали в его дворик, играя с игрушками или катались на самокате (велосипеде и т.д)\n"
             "и он забирал их вещи, крича очень громко. \n"
             "И вот в день Хэлоуина, вы играли в баскетбол со своим приятелем и вдруг мяч полетел на траву того Деда, \n "
             "вы с приятелем решили пойти за ним и ваш друг, ошкурился, поэтому пришлось идти вам.\n "
             "И вдруг выходит дед, забирает мяч и гонит на вас\n ")
    out_red("<Что ты творишь?>\n"
            "<Ты совсем офигел ходить по моей траве>\n"
            "<Я ж тебя убью>\n")
    out_dark("Вдруг Неберкрякер упал на траву и начал задыхаться...\n"
             "Вы вызвали скорую и его увезли.\n"
             "Через пару дней, вы заметили дым из дома Неберкрякера,\n"
             "но Деда в больнице.\n")
    out_red("Вы решили проверить\n"
            "и кинули в его дом бейсбольный мяч,\n"
            "как вдруг, дом ожил и забрал мяч, дом начал следить за вами.\n"
            "Дом высунул свой язык и начал тянуть вас с другом\n")
    out_dark("Вдруг появился Мистер Неберкрякер\n"
             "и рассказал про этот дом.\n"
             "Оказывается в этот дом вселился дух его жены\n"
             "Ее звали: Адель.\n"
             "Она всех ненавидела, так как она погибла из-за людей.\n"
             "И вот, Мистер Неберкрякер начал с ней общаться\n"
             "Он общался с ней так, будто она не дом-монстр, а человек.\n"
             "Он вспомнил, как увидел ее на берегу Каспийского моря,\n"
             "как они гуляли, веселились, резвились,\n")
    out_red("но вдруг Неберкрякер взял динамит\n"
            "поджег и кинул ей прямо в горло.\n"
            "Она не заметила и проглотила,\n"
            "как только она почувствовала, что что-то не так\n"
            "и вдруг она зорвалась\n"
            "из нее выпали все игрушки, которые дом забирал себе\n"
    )
    out_dark("Он заплакал,\n"
             "но протирая свои слезы,\n"
             "он начал смеяться.\n"
             "Мистер Неберкрякер начал радоваться,\n"
             "и начал говорить, что терпел 45 лет мучения этого дома.\n")

def choose_path(character_name):
    print(f"{character_name}, перед вами раздвигаются две дороги.")
    print("Выберите, куда вы отправитесь:")
    print("1. Путь через темный лес.")
    print("2. Путь в город особой магии.")

def riddle():
    answer = input("Я загадала загадку для вас. Хотите попробовать отгадать? (да/нет)")
    if answer.lower() == "да":
        print("В чем сила?")
        guess = input("Ваш ответ: ")
        if guess.lower() == "в правде":
            print("Ты прав, Ахишка!")
        else:
            print("Увы, это неправильный ответ. Попробуйте еще раз!")
    else:
        print("Жаль, может быть в следующий раз.")

def axi():
    answer = input("Я загадала загадку для вас. Хотите попробовать отгадать? (да/нет)")
    if answer.lower() == "да":
        print("Пожирает всё кругом:")
        print("Зверя, птицу, лес и дом.")
        print("Сталь сгрызёт, железо сгложет,")
        print("Крепкий камень уничтожит,")
        print("Власть его всего сильней,")
        print("Даже власти королей».")
        guess = input("Ваш ответ: ")
        if guess.lower() == "время":
            print("Ты прав, Уцы!")
        else:
            print("Увы, это неправильный ответ. Попробуйте еще раз!")
    else:
        print("Жаль, может быть в следующий раз.")

def conclusion(character_name):
    print(f"{character_name}, ваше приключение подошло к концу.")
    print("Вы разгадали загадку и встретили незабываемых персонажей.")
    print("Но важнее всего, вы обрели новые навыки, мудрость и силу.")
    print("Спасибо, что попались наши с вами пути вместе.")

# Пример использования сохранения и записи данных
introduction()
name = get_character_name()
choose_path(name)

path_choice = input("Введите номер выбранного пути: ")
if path_choice == "1":
    print(out_red("Вы выбрали путь в темный лес"))
    dark_forest()
    riddle()
elif path_choice == "2":
    print(out_green("Вы выбрали путь в магический город"))
    city_of_magic()
    axi()

# Ваши данные
user_data = {name: 100}  # Замените 100 на реальный счет пользователя

# Сохраняем данные в JSON файл
save_game_to_json(user_data, 'save_data.json')

# Загружаем данные из JSON файла
loaded_data = load_game_from_json('save_data.json')
print("Загруженные данные из JSON файла:", loaded_data)

# Удаляем сохранение
delete_save_json('save_data.json')

# Записываем данные в CSV файл
write_to_csv(user_data, 'user_scores.csv')

conclusion(name)
